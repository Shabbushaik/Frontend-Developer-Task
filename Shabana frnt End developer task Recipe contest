console.log("Become the programmer you're meant to be!")
RecipeCard.js

jsx
import React from 'react';

const RecipeCard = ({ recipe }) => {
  return (
    <div className="bg-white rounded shadow-md p-4">
      <h2 className="text-lg font-bold">{recipe.name}</h2>
      <p className="text-gray-600">{recipe.description}</p>
      <p className="text-gray-600">By {recipe.chef}</p>
    </div>
  );
};

export default RecipeCard;


FilterSidebar.js

jsx
import React, { useState } from 'react';

const FilterSidebar = () => {
  const [filters, setFilters] = useState({
    mealType: '',
    dishType: '',
    attributes: [],
  });

  const handleFilterChange = (event) => {
    setFilters({ ...filters, [event.target.name]: event.target.value });
  };

  return (
    <div className="bg-white rounded shadow-md p-4">
      <h2 className="text-lg font-bold">Filters</h2>
      <form>
        <div className="form-group">
          <label>Meal Type:</label>
          <select name="mealType" value={filters.mealType} onChange={handleFilterChange}>
            <option value="">All</option>
            <option value="Dinner">Dinner</option>
            <option value="Lunch">Lunch</option>
            <option value="Dessert">Dessert</option>
            <option value="Breakfast">Breakfast</option>
          </select>
        </div>
        <div className="form-group">
          <label>Dish Type:</label>
          <select name="dishType" value={filters.dishType} onChange={handleFilterChange}>
            <option value="">All</option>
            <option value="Pasta">Pasta</option>
            <option value="Pizza">Pizza</option>
            <option value="Seafood">Seafood</option>
            <option value="Soup">Soup</option>
            <option value="Mexican">Mexican</option>
            <option value="Smoothie">Smoothie</option>
          </select>
        </div>
        <div className="form-group">
          <label>Attributes:</label>
          <div className="flex flex-wrap">
            <div className="mr-2">
              <input type="checkbox" name="attributes" value="Contest Winner" />
              <span>Contest Winner</span>
            </div>
            <div className="mr-2">
              <input type="checkbox" name="attributes" value="Featured" />
              <span>Featured</span>
            </div>
            <div className="mr-2">
              <input type="checkbox" name="attributes" value="Test Kitchen-Approved" />
              <span>Test Kitchen-Approved</span>
            </div>
          </div>
        </div>
      </form>
    </div>
  );
};

export default FilterSidebar;


RecipeList.js

jsx
import React, { useState, useEffect } from 'react';
import RecipeCard from './RecipeCard';

const RecipeList = () => {
  const [recipes, setRecipes] = useState([]);
  const filteredRecipes, set
  
  
### RecipeList.js

jsx
import React, { useState, useEffect } from 'react';
import RecipeCard from './RecipeCard';

const RecipeList = () => {
  const [recipes, setRecipes] = useState([]);
  const [filteredRecipes, setFilteredRecipes] = useState([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [filters, setFilters] = useState({
    mealType: '',
    dishType: '',
    attributes: [],
  });

  useEffect(() => {
    const fetchRecipes = async () => {
      const response = await fetch('https://example.com/recipes');
      const data = await response.json();
      setRecipes(data);
      setFilteredRecipes(data);
    };
    fetchRecipes();
  }, []);

  const handleSearch = (event) => {
    setSearchQuery(event.target.value);
    const filteredRecipes = recipes.filter((recipe) => {
      return (
        recipe.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
        recipe.chef.toLowerCase().includes(searchQuery.toLowerCase()) ||
        recipe.description.toLowerCase().includes(searchQuery.toLowerCase())
      );
    });
    setFilteredRecipes(filteredRecipes);
  };

  const handleFilterChange = (event) => {
    setFilters({ ...filters, [event.target.name]: event.target.value });
    const filteredRecipes = recipes.filter((recipe) => {
      return (
        (filters.mealType === '' || recipe.mealType === filters.mealType) &&
        (filters.dishType === '' || recipe.dishType === filters.dishType) &&
        (filters.attributes.length === 0 ||
          filters.attributes.includes(recipe.attributes))
      );
    });
    setFilteredRecipes(filteredRecipes);
  };

  return (
    <div className="flex flex-wrap justify-center">
      <div className="w-full md:w-1/2 xl:w-1/3 p-4">
        <SearchBar handleSearch={handleSearch} />
      </div>
      <div className="w-full md:w-1/2 xl:w-1/3 p-4">
        <FilterSidebar filters={filters} handleFilterChange={handleFilterChange} />
      </div>
      <div className="w-full md:w-1/2 xl:w-2/3 p-4">
        {filteredRecipes.map((recipe) => (
          <RecipeCard key={recipe.id} recipe={recipe} />
        ))}
      </div>
    </div>
  );
};

export default RecipeList;


### SearchBar.js

jsx
import React from 'react';

const SearchBar = ({ handleSearch }) => {
  return (
    <div className="bg-white rounded shadow-md p-4">
      <h2 className="text-lg font-bold">Search Recipes</h2>
      <input
        type="text"
        placeholder="Search by name, chef, or description"
        className="w-full p-2 border border-gray-400 rounded"
        onChange={handleSearch}
      />
    </div>
  );
};

export default SearchBar;


### FilterSidebar.js

jsx
import React from 'react';

const FilterSidebar = ({ filters, handleFilterChange }) => {
  return (
    <div className="bg-white rounded shadow-md p-4">
      <h2 className="text-lg font-bold">Filters</h2>
      <form>
        <div className="form-group">
          <label>Meal Type:</label>
          <select
            name="mealType"
            value={filters.mealType}
            onChange={handleFilterChange}
            className="w-full p-2 border border-gray-400 rounded"
          >
            <option value="">All</option>
            <option value="Dinner">Dinner</option>
            <option value="Lunch">Lunch</option>
            <option value="Dessert">Dessert</option>
            <option value="Breakfast">Breakfast</option>
          </select>
        </div>
        <div className="form-group">
          <label>Dish Type:</label>
          <select
            name="dishType"
            value={filters.dishType}
            onChange={handleFilterChange}
            className="w-full p-2 border border-gray-400 rounded"
          >
            <option value="">All</option>
            <option value="Pasta">Pasta</option>
            <option value="Pizza">Pizza</option>
            <option value="Seafood">Seafood</option>
            <option value="Soup">Soup</option>
            <option value="Mexican">Mexican</option>
            <option value="Smoothie">Smoothie</option>
          </select>
        </div>
        <div className="form-group">
          <label>Attributes:</label>
          <div className="flex flex-wrap">
            <div className="mr-2">
              <input
                type="checkbox"
                name="
                
                
    

jsx
import React from 'react';

const FilterSidebar = ({ filters, handleFilterChange }) => {
  return (
    <div className="bg-white rounded shadow-md p-4">
      <h2 className="text-lg font-bold">Filters</h2>
      <form>
        <div className="form-group">
          <label>Meal Type:</label>
          <select
            name="mealType"
            value={filters.mealType}
            onChange={handleFilterChange}
            className="w-full p-2 border border-gray-400 rounded"
          >
            <option value="">All</option>
            <option value="Dinner">Dinner</option>
            <option value="Lunch">Lunch</option>
            <option value="Dessert">Dessert</option>
            <option value="Breakfast">Breakfast</option>
          </select>
        </div>
        <div className="form-group">
          <label>Dish Type:</label>
          <select
            name="dishType"
            value={filters.dishType}
            onChange={handleFilterChange}
            className="w-full p-2 border border-gray-400 rounded"
          >
            <option value="">All</option>
            <option value="Pasta">Pasta</option>
            <option value="Pizza">Pizza</option>
            <option value="Seafood">Seafood</option>
            <option value="Soup">Soup</option>
            <option value="Mexican">Mexican</option>
            <option value="Smoothie">Smoothie</option>
          </select>
        </div>
        <div className="form-group">
          <label>Attributes:</label>
          <div className="flex flex-wrap">
            <div className="mr-2">
              <input
                type="checkbox"
                name="attributes"
                value="Contest Winner"
                checked={filters.attributes.includes('Contest Winner')}
                onChange={handleFilterChange}
              />
              <span>Contest Winner</span>
            </div>
            <div className="mr-2">
              <input
                type="checkbox"
                name="attributes"
                value="Featured"
                checked={filters.attributes.includes('Featured')}
                onChange={handleFilterChange}
              />
              <span>Featured</span>
            </div>
            <div className="mr-2">
              <input
                type="checkbox"
                name="attributes"
                value="Test Kitchen-Approved"
                checked={filters.attributes.includes('Test Kitchen-Approved')}
                onChange={handleFilterChange}
              />
              <span>Test Kitchen-Approved</span>
            </div>
          </div>
        </div>
      </form>
    </div>
  );
};

export default FilterSidebar;




jsx
import React, { useState, useEffect } from 'react';
import RecipeCard from './RecipeCard';
import FilterSidebar from './FilterSidebar';
import SearchBar from './SearchBar';

const RecipeList = () => {
  const [recipes, setRecipes] = useState([]);
  const [filteredRecipes, setFilteredRecipes] = useState([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [filters, setFilters] = useState({
    mealType: '',
    dishType: '',
    attributes: [],
  });

  useEffect(() => {
    const fetchRecipes = async () => {
      const response = await fetch('https://example.com/recipes');
      const data = await response.json();
      setRecipes(data);
      setFilteredRecipes(data);
    };
    fetchRecipes();
  }, []);

  const handleSearch = (event) => {
    setSearchQuery(event.target.value);
    const filteredRecipes = recipes.filter((recipe) => {
      return (
        recipe.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
        recipe.chef.toLowerCase().includes(searchQuery.toLowerCase()) ||
        recipe.description.toLowerCase().includes(searchQuery.toLowerCase())
      );
    });
    setFilteredRecipes(filteredRecipes);
  };

  const handleFilterChange = (event) => {
    setFilters({ ...filters, [event.target.name]: event.target.value });
    const filteredRecipes = recipes.filter((recipe) => {
      return (
        (filters.mealType === '' || recipe.mealType === filters.mealType) &&
        (filters.dishType === '' || recipe.dishType === filters.dishType) &&
        (filters.attributes.length === 0 ||
          filters.attributes.includes(recipe.attributes))
      );
    });
    setFilteredRecipes(filteredRecipes);
  };

  return (
    <div className="flex flex-wrap justify-center">
      <div className="w-full md:w-1/2 xl:w-1/3 p-4">
        <SearchBar handleSearch={handleSearch} />
      </div>
      <div className="w-full md:w-1/2 xl:w-1/3 p-
      
jsx
import React, { useState, useEffect } from 'react';
import RecipeCard from './RecipeCard';
import FilterSidebar from './FilterSidebar';
import SearchBar from './SearchBar';

const RecipeList = () => {
  const [recipes, setRecipes] = useState([]);
  const [filteredRecipes, setFilteredRecipes] = useState([]);
  const [searchQuery, setSearchQuery] = useState('');
  const [filters, setFilters] = useState({
    mealType: '',
    dishType: '',
    attributes: [],
  });

  useEffect(() => {
    const fetchRecipes = async () => {
      const response = await fetch('https://example.com/recipes');
      const data = await response.json();
      setRecipes(data);
      setFilteredRecipes(data);
    };
    fetchRecipes();
  }, []);

  const handleSearch = (event) => {
    setSearchQuery(event.target.value);
    const filteredRecipes = recipes.filter((recipe) => {
      return (
        recipe.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
        recipe.chef.toLowerCase().includes(searchQuery.toLowerCase()) ||
        recipe.description.toLowerCase().includes(searchQuery.toLowerCase())
      );
    });
    setFilteredRecipes(filteredRecipes);
  };

  const handleFilterChange = (event) => {
    setFilters({ ...filters, [event.target.name]: event.target.value });
    const filteredRecipes = recipes.filter((recipe) => {
      return (
        (filters.mealType === '' || recipe.mealType === filters.mealType) &&
        (filters.dishType === '' || recipe.dishType === filters.dishType) &&
        (filters.attributes.length === 0 ||
          filters.attributes.includes(recipe.attributes))
      );
    });
    setFilteredRecipes(filteredRecipes);
  };

  return (
    <div className="flex flex-wrap justify-center">
      <div className="w-full md:w-1/2 xl:w-1/3 p-4">
        <SearchBar handleSearch={handleSearch} />
      </div>
      <div className="w-full md:w-1/2 xl:w-1/3 p-4">
        <FilterSidebar filters={filters} handleFilterChange={handleFilterChange} />
      </div>
      <div className="w-full md:w-1/2 xl:w-2/3 p-4">
        {filteredRecipes.map((recipe) => (
          <RecipeCard key={recipe.id} recipe={recipe} />
        ))}
      </div>
    </div>
  );
};